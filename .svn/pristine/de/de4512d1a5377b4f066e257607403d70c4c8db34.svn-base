package com.guanglumedia.cms.rollingnews.action;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.guanglumedia.cms.common.BaseAction;
import com.guanglumedia.cms.common.Feedback;
import com.guanglumedia.cms.common.PagedModelList;
import com.guanglumedia.cms.rollingnews.entity.Rollingnews;
import com.guanglumedia.cms.rollingnews.service.RollingnewsService;
/**
 * 滚动消息控制器
 * @author caokai
 */
@Controller
@RequestMapping(value="/cms/rollingnews")
public class RollingnewsAction extends BaseAction {
	Logger log = LoggerFactory.getLogger(RollingnewsAction.class);
    @Autowired
    private RollingnewsService rollingnewsService;
    
    /**
	 * 查询首页滚动消息列表
	 * @param  pagerecommend 				首页滚动消息对象
	 * @param  request     					请求对象，客户端请求的数据到这个对象
	 * @param  model        				模型对象
	 * @return String       				返回string类型的结果
	 * @throws UnsupportedEncodingException 抛出不支持编码异常
	 */
    @RequestMapping(value="findrollingnewslist")
    public String getRollingnewsList(@RequestParam Map<String,Object> map, HttpServletRequest request, Model model) throws UnsupportedEncodingException{
    	log.info("findrollingnewsList---------------");
        PagedModelList<Map<String, Object>> pml = rollingnewsService.findRollnewsList(this.getPageNo(request), this.getPageRow(request),map);
        log.info("request-------" + request);
        log.info("model-------" + model);
        log.info("map-------" +map);
        log.info("map.size()-------" +map.size());
        model.addAttribute("pml", pml);
        return "rollingnews/ListRollingnews";
    }
    
    /**
     * 判断是修改、查看、还是添加的方法
	 * @param  id      首页滚动消息对象的id
	 * @param  edit	      是否是编辑
	 * @param  request 请求对象，客户端请求的数据到这个对象
	 * @param  model   模型对象
	 * @return String  返回string类型的结果
	 */
    @RequestMapping(value = "tomodifyrollingnews")
    public String toModifyRollingnews(@RequestParam("id") int id, 
            @RequestParam("Edit") String edit, HttpServletRequest request, Model model) throws UnsupportedEncodingException {
    	log.info("tomodifyrollingnews-----------");
        if (id > 0) {
            Rollingnews rollingnews= rollingnewsService.getRollingnewsById(id);
            log.info("rollingnews---------" + rollingnews);
            model.addAttribute("rollingnews", rollingnews);
            log.info("model---------" + model);
        }
        model.addAttribute("Edit", edit);
        log.info("model---------" + model);
        model.addAttribute("RollingnewsId", id);
        log.info("model---------" + model);
        return "rollingnews/ModifyRollingnews";
    }
    
    //
    @RequestMapping(value="addrollingnews")
    @ResponseBody
    public Feedback addRollingnews(@RequestParam Map<String,Object> map,HttpServletRequest request, Model model){
    	log.info("addrollingnews-----------");
        int    result  = -1;
        String message ="添加失败";
        try{
            result = rollingnewsService.addRollingnews(map);
        }catch (Exception e){
            e.printStackTrace();
            message = e.getMessage();
        }
        if(result > 0){
            return Feedback.success("添加成功");
        }else{
            return Feedback.fail(message);
        }
    }
    
    @RequestMapping(value="delrollingnews")
    @ResponseBody
    public Feedback delRollingnews(@RequestParam("id")int id,HttpServletRequest request, Model model){
    	log.info("delrollingnews-----------");
        int result=-1;
        String message="删除失败";
        try{
            result = rollingnewsService.delRollingnews(id);
        }catch (Exception e){
            e.printStackTrace();
            message=e.getMessage();
        }
        if(result > 0){
            return Feedback.success("删除成功");
        }else{
            return Feedback.fail(message);
        }
    }
    
    /**
	 * 修改首页广告活动推荐对象的属性
	 * @param  pagerecommend 首页广告活动推荐对象
	 * @param  request		  请求对象，客户端请求的数据到这个对象	
	 * @param  model         模型对象
	 * @return Feedback      返回Feedback类型的结果
	 */
	@RequestMapping(value="modifyrollingnews")
    @ResponseBody
	public Feedback modifyRollingnews(Rollingnews rollingnews,HttpServletRequest request, Model model){
		log.info("modifyrollingnews----------");
	    int    result  = -1;
	    String message = "更新失败";
	    try{
	        result = this.rollingnewsService.updateRollingnews(rollingnews);
	        log.info("更新结果---------" + model);
	    }catch (Exception e){
	        e.printStackTrace();
	        message = e.getMessage();
	    }
	    if(result > 0){
	        return Feedback.success("更新成功");
	    }else{
	        return Feedback.fail(message);
	    }
    }
}
